in pseudocode:
    # create a named tuple structure that encompasses everything you want:
    Connection = namedtuple('Connection', ['source', 'destination', 'port'])
    all_connections = [] #create an empty list for all connections.
    
    
    # load the file into memory as a variable, process it in a way that you get a useful amount of data
    #for each line, extract source, destination port and build a named tuple:
        this_connection = Connection(souce, dest, port)
        all_connections.append(this_connection)
        
    # this now gives you a handy list of all connections you have in all_connections
    
    
    # create the set of all ips in your list:
    all_ips = set()
    
    # create the set of all ips in your list:
    all_ports = set()
    
    for conn in all_connections:
        all_ips.add(conn.source)
        all_ips.add(conn.destination)
        all_ports.add(conn.port)
        
    #all_ips is now a Python set (as opposed to a list) of all ip addresses
    # all_ports is the same, with ports.
    
    # Create a network graph object
    import networkx as nx # This should go at the top
    g = nx.Graph()
    
    for ip in all_ips:
        g.add_node(ip)
        
    # at this point you have a network graph that contains all your nodes but no edges. Now to get kinda crafty. And I'm guessing a lot from here.
    # Also, you should be able to plot this at this point to determine how plotly will handle this sorta display.
    
    # Build a dictionary of network graphs such that you have one for each port that you have seen in the scan:
    all_graphs_dict = {}
    for port in all_ports:
        all_graps_dict[port] = nx.Graph(g) # this syntax should copy the object. IF this doesn't work you can use deepcopy (import deepcopy)
        
    # Now to place the edges on each graph:
    for conn in all_connections:
        all_graps_dict[conn.port].add_edge(conn.source, conn.destination)
        
    #Now, you have a massive dictionary of graphs. The key for the dict is port number, so to access the nx.Graph that exists for port 53 it is all_graphs_dict[53]

    #This should now enable you to use the demo code from plotly to make some actual progress. Without pandas.
    
    #The general approach would be to plot all the nodes in one location, then go through the edges for each port and plot them in a different colour between the same nodes.
    # May be a bit tricky to nail down locations, but I'd start with this.
